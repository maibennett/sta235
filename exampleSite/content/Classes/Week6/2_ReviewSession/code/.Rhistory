################################################################################
### Title: "Week 6 - Randomized Controlled Trials II and Observational Studies"
### Course: STA 235H
### Semester: Fall 2022
### Professor: Magdalena Bennett
################################################################################
# Clears memory
rm(list = ls())
# Clears console
cat("\014")
### Load libraries
# If you don't have one of these packages installed already, you will need to run install.packages() line
library(tidyverse)
library(estimatr)
library(modelsummary)
## Get Out the Vote study
# If you are loading this in class, you might be better loading the second file (it's just a smaller version of the same dataset)
# If you're running this at home, load this (complete data):
#d <- read.csv("https://raw.githubusercontent.com/maibennett/sta235/main/exampleSite/content/Classes/Week6/1_RCT/data/voters_covariates.csv")
# If you're running this live in class, load this dataset:
d <- read.csv("https://raw.githubusercontent.com/maibennett/sta235/main/exampleSite/content/Classes/Week6/1_RCT/data/sample_gotv.csv")
# Drop this first variable (row names)
d <- d %>% select(-X)
# Drop variables with unlisted phone numbers
d_s1 <- d %>% filter(!is.na(treat_real))
# Create strata variables: Interaction between state and competitiveness level.
# Also, we will create the interaction between state, competitiveness level, AND treatment level
d_s1 <- d_s1 %>% mutate(strata = interaction(stateA, competiv),
strata_treat = interaction(treat_real, stateA, competiv))
# Transform competiv into a binary variable, and create two variables for state:
d_s1 <- d_s1 %>% mutate(competiv = competiv - 1,
stateA = ifelse(state==1, 1, 0))
# Create strata variables: Interaction between state and competitiveness level.
# Also, we will create the interaction between state, competitiveness level, AND treatment level
d_s1 <- d_s1 %>% mutate(strata = interaction(stateA, competiv),
strata_treat = interaction(treat_real, stateA, competiv))
d_s1 %>% select(strata) %>% table()
d_s1 %>% select(strata_treat) %>% table()
# Create a dataset for balance:
d_s1_bal <- d_s1 %>% select(strata_treat, persons,
vote00, vote98, newreg,
age, female2, fem_miss)
datasummary_balance(~ strata_treat, data = d_s1_bal,
dinm_statistic = "p.value")
d_s1_bal <- d_s1 %>% filter(strata == "0.0") %>% select(strata_treat, persons,
vote00, vote98, newreg,
age, female2, fem_miss)
d_s1_bal <- d_s1 %>% filter(strata == "0.0") %>%
select(treat_treat, persons,
vote00, vote98, newreg,
age, female2, fem_miss)
d_s1_bal <- d_s1 %>% filter(strata == "0.0") %>%
select(treat_real, persons,
vote00, vote98, newreg,
age, female2, fem_miss)
datasummary_balance(~ treat_real, data = d_s1_bal,
dinm_statistic = "p.value")
datasummary_balance(~ treat_real, data = d_s1_bal,
dinm_statistic = "p.value", fmt = 3)
summary(lm_robust(vote02 ~ treat_real + strata, data = d_s1)) # We are using lm_robust() because we have a binary variable as an outcome.
################################################################################
### Title: "Week 6 - Randomized Controlled Trials II and Observational Studies"
### Course: STA 235H
### Semester: Fall 2022
### Professor: Magdalena Bennett
################################################################################
# Clears memory
rm(list = ls())
# Clears console
cat("\014")
### Load libraries
# If you don't have one of these packages installed already, you will need to run install.packages() line
library(tidyverse)
library(estimatr)
library(modelsummary)
## Get Out the Vote study
# If you are loading this in class, you might be better loading the second file (it's just a smaller version of the same dataset)
# If you're running this at home, load this (complete data):
#d <- read.csv("https://raw.githubusercontent.com/maibennett/sta235/main/exampleSite/content/Classes/Week6/1_RCT/data/voters_covariates.csv")
# If you're running this live in class, load this dataset:
d <- read.csv("https://raw.githubusercontent.com/maibennett/sta235/main/exampleSite/content/Classes/Week6/1_RCT/data/sample_gotv.csv")
# Drop this first variable (row names)
d <- d %>% select(-X)
# Drop variables with unlisted phone numbers
d_s1 <- d %>% filter(!is.na(treat_real))
# Transform competiv into a binary variable, and create two variables for state:
d_s1 <- d_s1 %>% mutate(competiv = competiv - 1,
stateA = ifelse(state==1, 1, 0))
# Create strata variables: Interaction between state and competitiveness level.
# Also, we will create the interaction between state, competitiveness level, AND treatment level
d_s1 <- d_s1 %>% mutate(strata = interaction(stateA, competiv),
strata_treat = interaction(treat_real,
stateA, competiv))
d_s1 %>% select(strata) %>% table()
d_s1 %>% select(strata_treat) %>% table()
# Create a dataset for balance:
d_s1_bal <- d_s1 %>% select(strata_treat, persons,
vote00, vote98, newreg, age,
female2, fem_miss)
datasummary_balance(~ strata_treat, data = d_s1_bal,
dinm_statistic = "p.value", fmt = 3)
d_s1_bal <- d_s1 %>% filter(strata == "0.0") %>%
select(treat_real, persons,
vote00, vote98, newreg, age,
female2, fem_miss)
datasummary_balance(~ treat_real, data = d_s1_bal,
dinm_statistic = "p.value", fmt = 3)
summary(lm_robust(vote02 ~ treat_real + strata, data = d_s1)) # We are using lm_robust() because we have a binary variable as an outcome.
