################################################################################
### Title: "Week 6 - Randomized Controlled Trials II and Observational Studies"
### Course: STA 235H
### Semester: Fall 2023
### Professor: Magdalena Bennett
################################################################################
# Clears memory
rm(list = ls())
# Clears console
cat("\014")
### Load libraries
# If you don't have one of these packages installed already, you will need to run install.packages() line
library(tidyverse)
library(estimatr)
library(modelsummary)
#install.packages("MatchIt")
library(MatchIt)
## Get Out the Vote study
# If you're running this at home, this is the complete data from the study, if you want to load it:
#d = read.csv("https://raw.githubusercontent.com/maibennett/sta235/main/exampleSite/content/Classes/Week6/1_ObsStudies/data/voters_covariates.csv")
# If you're running this live in class, load this dataset (smaller dataset from the entire study):
d = read.csv("https://raw.githubusercontent.com/maibennett/sta235/main/exampleSite/content/Classes/Week6/1_ObsStudies/data/sample_gotv.csv")
d %>% count(is.na(treat_real))
d_s1 = d %>% filter(!is.na(treat_real)) %>% select(-treat_pseudo)
# Just for performance purposes, we will use a smaller sample of the original data (just looking at one stratum):
d_s1 = d_s1 %>% filter(state == 1 & competiv == 1)
datasummary_balance(~ treat_real, data = d_s1_bal,
dinm_statistic = "p.value", fmt = 3) #COMPLETE
# Create a dataset to check for balance.
d_s1_bal = d_s1 %>% select(-vote02, -contact) #COMPLETE
datasummary_balance(~ treat_real, data = d_s1_bal,
dinm_statistic = "p.value", fmt = 3) #COMPLETE
lm1 = lm_robust(vote02 ~ treat_real, data = d_s1)
summary(lm1)
lm2 = lm_robust(vote02 ~ treat_real + persons + competiv +
vote00 + vote98 + newreg + age + female2 + fem_miss, data = d_s1)
summary(lm2)
summary(lm_robust(vote02 ~ contact, data = d_s1))
# Let's add some covariates now:
summary(lm_robust(vote02 ~ contact + persons + vote00 + vote98 + newreg + age + female2, data = d_s1))
m1 = matchit(contact ~ persons + vote00 + vote98 + newreg +
age + female2, data = d_s1,
method = "nearest", exact = ~ state, caliper = 0.2)
# Let's check balance before and after matching (focus on the first three columns)
summary(m1)
# Now, let's get our matched data:
d_m1 = match.data(m1)
# Check whether it looks good:
d_m1 %>% select(contact) %>% table() #Same number of treatment and controls!
# Let's check for balance
d_m1_bal = d_m1 %>% select(contact, persons,vote00,vote98,newreg,age,female2)
datasummary_balance(~ contact, data = d_m1_bal, fmt = 3, dinm_statistic = "p.value")
lm_match = lm_robust(vote02 ~ contact, data = d_m1)# COMPLETE
summary(lm_match)
