data = bacondecomp::castle,
id_var = "state",
time_var = "year")
## Ok, let's do the Goodman-Bacon Decomposition:
df_bacon <- bacon(popularity ~ treat, data = swift, id_var = "state", time_var = "date_num") # Make sure the time_var is numeric
# Question: Can you interpret these effects looking at the popularity plot?
coef_bacon <- sum(df_bacon$estimate * df_bacon$weight)
print(paste("Weighted sum of decomposition =", round(coef_bacon, 4))) #It's the same as the TWFE model!
## Ok, let's do the Goodman-Bacon Decomposition:
df_bacon <- bacon(popularity ~ treat, data = swift, id_var = "state", time_var = "date_num") # Make sure the time_var is numeric
df_bacon # Question: Can you interpret these effects looking at the popularity plot?
coef_bacon <- sum(df_bacon$estimate * df_bacon$weight)
print(paste("Weighted sum of decomposition =", round(coef_bacon, 4))) #It's the same as the TWFE model!
?~
?
# Scented candles
s1820_2 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(year = reorder(format(Date, '%Y'), Date)) %>%
mutate(month = reorder(format(Date, '%B'), Date)) %>%
group_by(year, month) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
s1820_2
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(year = reorder(format(Date, '%Y'), Date)) %>%
mutate(month = reorder(format(Date, '%B'), Date)) %>%
group_by(year, month) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
ggplot(s1920, aes(x=as.factor(month), y = nsprop, group = month))+
geom_bar(stat = "identity", fill = "lightseagreen")+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_light()+
theme(plot.title = element_text(size=16))
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(year = reorder(format(Date, '%Y'), Date)) %>%
mutate(month = reorder(format(Date, '%B'), Date)) %>%
group_by(year, month) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
s1920
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(year = format(Date, '%Y'), Date) %>%
mutate(month = format(Date, '%B'), Date) %>%
group_by(year, month) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
ggplot(s1920, aes(x=as.factor(month), y = nsprop, group = month))+
geom_bar(stat = "identity", fill = "lightseagreen")+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_light()+
theme(plot.title = element_text(size=16))
s1920
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(year = format(Date, '%Y'), Date) %>%
mutate(month = format(Date, '%B'), Date) %>%
arrange(Date) %>%
group_by(year, month) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
ggplot(s1920, aes(x=as.factor(month), y = nsprop, group = month))+
geom_bar(stat = "identity", fill = "lightseagreen")+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_light()+
theme(plot.title = element_text(size=16))
s1920
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(year = format(Date, '%Y'), Date) %>%
mutate(month = format(Date, '%B'), Date) %>%
arrange(Date) %>%
group_by(year, month) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
ggplot(s1920, aes(x=factor(month, ordered = T), y = nsprop, group = month))+
geom_bar(stat = "identity", fill = "lightseagreen")+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_light()+
theme(plot.title = element_text(size=16))
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(month_year = format(Date, '%B-%Y'), Date) %>%
arrange(Date) %>%
group_by(year, month) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
ggplot(s1920, aes(x=factor(month_year), y = nsprop, group = month))+
geom_bar(stat = "identity", fill = "lightseagreen")+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_light()+
theme(plot.title = element_text(size=16))
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(month_year = format(Date, '%B-%Y'), Date) %>%
arrange(Date) %>%
group_by(month_year) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
ggplot(s1920, aes(x=factor(month_year), y = nsprop, group = month))+
geom_bar(stat = "identity", fill = "lightseagreen")+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_light()+
theme(plot.title = element_text(size=16))
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(month_year = format(Date, '%B-%Y'), Date) %>%
arrange(Date) %>%
group_by(month_year) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
ggplot(s1920, aes(x=factor(month_year), y = nsprop, group = month_year))+
geom_bar(stat = "identity", fill = "lightseagreen")+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_light()+
theme(plot.title = element_text(size=16))
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(month_year = format(Date, '%B-%Y'), Date) %>%
arrange(Date) %>%
group_by(month_year) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
ggplot(s1920, aes(x=factor(month_year), y = nsprop, group = month_year))+
geom_bar(stat = "identity", fill = "lightseagreen")+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_light()+
theme(plot.title = element_text(size=16))+
scale_x_date(date_labels = "%m-%Y", date_breaks = "3 month")
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(month_year = format(Date, '%B-%Y'), Date) %>%
arrange(Date) %>%
group_by(month_year) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
ggplot(s1920, aes(x=factor(month_year), y = nsprop, group = month_year))+
geom_bar(stat = "identity", fill = "lightseagreen")+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_light()+
theme(plot.title = element_text(size=16))
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(month_year = format(Date, '%B-%Y'), Date) %>%
arrange(Date) %>%
group_by(month_year) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
ggplot(s1920, aes(x=factor(month_year), y = nsprop, group = month_year))+
geom_bar(stat = "identity", fill = "lightseagreen")+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_light()+
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size = 14, angle = 45))
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(month_year = format(Date, '%Y-%B'), Date) %>%
arrange(Date) %>%
group_by(month_year) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
ggplot(s1920, aes(x=factor(month_year, ordered = TRUE), y = nsprop, group = month_year))+
geom_bar(stat = "identity", fill = "lightseagreen")+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_light()+
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size = 14, angle = 45))
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(month_year = format(Date, '%Y-%B'), Date) %>%
arrange(Date)
s1920
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(month_year = format(Date, '%Y-%B'), Date) %>%
arrange(Date) %>%
group_by(month_year)
s1920
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(month_year = format(Date, '%Y-%B'), Date) %>%
arrange(Date) %>%
group_by(month_year) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent))
s1920
?group_by
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(month_year = format(Date, '%Y-%B'), Date) %>%
group_by(month_year) %>%
add_tally() %>%
arrange(month_year) %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
?group_by
s1920
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(month_year = format(Date, '%Y-%B'), Date) %>%
group_by(month_year) %>%
add_tally() %>%
arrange(as.Date(month_year,'%Y-%B')) %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
s1920
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(month_year = format(Date, '%Y-%B'), Date) %>%
arrange(month_year) %>%
group_by(month_year) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
s1920
s1920 %>% arrange(as.Date(month_year,'%Y-%B'))
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(month_year = reorder(format(Date, '%B-%Y'), Date)) %>%
group_by(month_year) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
s1920
ggplot(s1920, aes(x=factor(month_year), y = nsprop, group = month_year))+
geom_bar(stat = "identity", fill = "lightseagreen")+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_light()+
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size = 14, angle = 45))
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>%
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(month_year = reorder(format(Date, '%B-%Y'), Date)) %>%
group_by(month_year) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
ggplot(s1920, aes(x=factor(month_year), y = nsprop, group = month_year))+
geom_bar(stat = "identity", fill = "lightseagreen")+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_light()+
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size = 14, angle = 45))
ggplot(s1920, aes(x=factor(month_year), y = nsprop, group = month_year))+
geom_bar(stat = "identity", fill = alpha("#BF3984",0.3), col = "#BF3984")+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
geom_vline(aes(xintercept = "January-2020"), color = "#5601A4", lty = 2)
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_light()+
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size = 14, angle = 45))
ggplot(s1920, aes(x=factor(month_year), y = nsprop, group = month_year))+
geom_bar(stat = "identity", fill = alpha("#BF3984",0.5), col = "#BF3984", lwd=2)+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
geom_vline(aes(xintercept = "January-2020"), color = "#5601A4", lty = 2)
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_light()+
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size = 14, angle = 45))
ggplot(s1920, aes(x=factor(month_year), y = nsprop, group = month_year))+
geom_bar(stat = "identity", fill = alpha("#BF3984",0.5), col = "#BF3984", lwd=1.5)+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
geom_vline(aes(xintercept = "January-2020"), color = "#5601A4", lty = 2, lwd = 1.3) +
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_bw()+
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size = 14, angle = 45))
ggplot(s1920, aes(x=factor(month_year), y = nsprop, group = month_year))+
geom_bar(stat = "identity", fill = alpha("#BF3984",0.5), col = "#BF3984", lwd=1.5)+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
geom_vline(aes(xintercept = "January-2020"), color = "#5601A4", lty = 2, lwd = 1.3) +
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_bw()+
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size = 14, angle = 45)) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.line = element_line(colour = "dark grey"))
ggplot(s1920, aes(x=factor(month_year), y = nsprop, group = month_year))+
geom_bar(stat = "identity", fill = alpha("#BF3984",0.5), col = "#BF3984", lwd=1.5)+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
geom_vline(aes(xintercept = "January-2020"), color = "#5601A4", lty = 2, lwd = 1.3) +
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_bw()+
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size = 14, angle = 45)) + #Puts the x-labels in a 45 degree angle
theme(panel.grid.major.x = element_blank(), # All this basically eliminate the gridlines and the border
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "dark grey"))
# Scented candles
s1920 <- scented %>%
mutate(Date = as.Date(Date, format = "%d-%b-%y")) %>%
arrange(Date) %>%
filter(Date >= "2019-01-01") %>% # Now we just keep data for 2019 to 2020
filter(CandleID <= 3) %>%
mutate(noscent = no_scent(Review)) %>% # Apply the no scent function we created before
mutate(noscent = ifelse(noscent != 1, 0, 1)) %>%# Generate a dummy variable whether no_scent = TRUE
mutate(month_year = reorder(format(Date, '%B-%Y'), Date)) %>% # I just want to keep data at the month level, so create a new variable
group_by(month_year) %>%
add_tally() %>%
summarise(n =n, noscent = sum(noscent)) %>%
mutate(nsprop = noscent/n) %>%
mutate(se = sqrt((nsprop*(1-nsprop))/n)) %>%
summarise(n=mean(n), se=mean(se), nsprop=mean(nsprop))
ggplot(s1920, aes(x=factor(month_year), y = nsprop, group = month_year))+
geom_bar(stat = "identity", fill = alpha("#BF3984",0.5), col = "#BF3984", lwd=1.5)+
geom_errorbar(aes(ymin = (nsprop-se), ymax = (nsprop+se)), width=0.2, colour = "gray30")+
geom_vline(aes(xintercept = "January-2020"), color = "#5601A4", lty = 2, lwd = 1.3) +
labs(x = "Month", y = "Proportion of reviews", title = "Top 5 scented candles on Amazon: \nProportion of reviews mentioning lack of scent by month 2020")+
theme_bw()+
theme(plot.title = element_text(size=16),
axis.text.x = element_text(size = 14, angle = 45)) + #Puts the x-labels in a 45 degree angle
theme(panel.grid.major.x = element_blank(), # All this basically eliminate the gridlines and the border
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "dark grey"))
